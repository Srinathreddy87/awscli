{
    "type": "struct",
    "fields": [
        {
            "name": "test_name",
            "type": "string",
            "nullable": true,
            "metadata": {}
        },
        {
            "name": "table_a",
            "type": "string",
            "nullable": true,
            "metadata": {}
        },
        {
            "name": "table_b",
            "type": "string",
            "nullable": true,
            "metadata": {}
        },
        {
            "name": "column_name",
            "type": "string",
            "nullable": true,
            "metadata": {}
        },
        {
            "name": "schema_mismatch",
            "type": "boolean",
            "nullable": true,
            "metadata": {}
        },
        {
            "name": "data_mismatch",
            "type": "boolean",
            "nullable": true,
            "metadata": {}
        },
        {
            "name": "mismatch_count",
            "type": "integer",
            "nullable": true,
            "metadata": {}
        },
        {
            "name": "validation_errors",
            "type": "string",
            "nullable": true,
            "metadata": {}
        },
        {
            "name": "run_date",
            "type": "timestamp",
            "nullable": true,
            "metadata": {}
        }
    ]
}
-----------

-- Load the JSON data into a DataFrame
CREATE OR REPLACE TEMP VIEW ab_final_result_schema AS
SELECT * FROM json.`/dbfs/mocks/ab_final_result_schema.json`;

-- Create a summary table to show columns and data mismatches for each table
WITH ab_test_summary AS (
    SELECT
        test_name,
        table_a,
        table_b,
        column_name,
        COUNT(*) AS mismatch_count,
        SUM(CASE WHEN column_name NOT IN (SELECT column_name FROM json.`/dbfs/mocks/ab_final_result_schema.json`) THEN 1 ELSE 0 END) AS schema_mismatch,
        SUM(CASE WHEN data_mismatch THEN 1 ELSE 0 END) AS data_mismatch,
        current_date() AS run_date
    FROM
        ab_final_result_schema
    GROUP BY
        test_name,
        table_a,
        table_b,
        column_name
),
drill_down_queries AS (
    SELECT
        test_name,
        table_a,
        table_b,
        column_name,
        CONCAT('SELECT * FROM ', table_a, ' WHERE ', column_name, ' IS NULL OR ', column_name, ' IN (SELECT ', column_name, ' FROM ', table_b, ' WHERE ', column_name, ' IS NULL)') AS drill_down_query
    FROM
        ab_final_result_schema
    WHERE
        schema_mismatch = TRUE OR data_mismatch = TRUE
)

-- Main query to use for visualization
SELECT
    s.test_name,
    s.table_a,
    s.table_b,
    s.column_name,
    s.schema_mismatch > 0 AS schema_mismatch,
    s.data_mismatch > 0 AS data_mismatch,
    s.mismatch_count,
    s.run_date,
    d.drill_down_query
FROM
    ab_test_summary s
    LEFT JOIN drill_down_queries d ON s.test_name = d.test_name AND s.table_a = d.table_a AND s.table_b = d.table_b AND s.column_name = d.column_name
ORDER BY
    s.test_name,
    s.table_a,
    s.table_b,
    s.column_name;
